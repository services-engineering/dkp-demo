apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kafka-cassandra-connector
  name: kafka-cassandra-connector
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: kafka-cassandra-connector
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: kafka-cassandra-connector
    spec:
      containers:
      - image: jlnhnng/kafka-cassandra-connector:latest
        imagePullPolicy: Always
        name: kafka-cassandra-connector
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        env:
          #TODO: get TLS working because this is v dangerous
        - name: NODE_TLS_REJECT_UNAUTHORIZED
          value: '0'
      initContainers:
      - image: jlnhnng/cassandra-init:latest
        imagePullPolicy: Always
        name: cassandra-init
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-cassandra-connector-svc
spec:
  selector:
    app: kafka-cassandra-connector
  ports:
    - port: 3002
      targetPort: 3002
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: traefik
  name: kafka-cassandra-connector-ingress
spec:
  rules:
  - http:
      paths:
      - path: /kafka-cassandra-connector
        backend:
          serviceName: kafka-cassandra-connector-svc
          servicePort: 3002